openapi: 3.0.0

info:
  title: URL shortener API
  version: 0.1.0

servers:
  - url: /

paths:
  /v1/url/{shortened}:
    get:
      summary: Redirects to URL that was shortened
      parameters:
        - name: shortened
          in: path
          required: true
          description: Shortened URL
          schema:
            type: string
            minLength: 7
            maxLength: 7
      responses:
        '302':
          description: Redirected to URL
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/url:
    post:
      summary: Creates a new shortened URL
      requestBody:
        description: URL to be shortened with an optional expiry UNIX timestamp
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/URL'
      responses:
        '201':
          description: Shortened URL created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortenedURL'
        '400':
          $ref: '#/components/responses/BadRequest'

  /v1/version:
    get:
      summary: Returns microservice version information
      responses:
        '200':
          description: Version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'

  /livez:
    get:
      summary: Checks liveness
      responses:
        '200':
          description: Service is alive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'

  /readyz:
    get:
      summary: Checks readiness
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'

components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BadRequest:
      description: The specified request was badly formatted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      example:
        code: Unique error code
        message: Error message

    URL:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
        expireAt:
          type: integer
          format: int64

    ShortenedURL:
      type: object
      required:
        - shortUrl
      properties:
        shortUrl:
          type: string
          format: uri

    Version:
      type: object
      required:
        - revision
        - version
      properties:
        revision:
          type: string
        version:
          type: string

    Health:
      type: object
      required:
        - status
      properties:
        status:
          type: string
