# Default values for urlshortener.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: k3d-registry.localhost:50000/urlshortener
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

annotations: { }

command: [ ]

args: [ ]

env: { }

readiness:
  enabled: true
  path: /readyz
  port: 8080
  initialDelaySeconds: 5
  timeoutSeconds: 3

liveness:
  enabled: true
  path: /livez
  port: 8080
  initialDelaySeconds: 15


# Result will be
#  /etc/app/
#  ├── config.yaml
#  └── secrets/
#      └── redis.yaml
config:
  mountPath: /etc/app/
  configMap:
    key: config.yaml
    subPath: config.yaml
    data:
      server:
        address: ":8080"
        delaySigterm: 5
      logger:
        development: false
      redis:
        host: "urlshortener-redis-master"
        port: "6379"
        retries: 6
        minRetryBackoff: 1000
        maxRetryBackoff: 32000
  # secrets data is included for example purposes only
  secrets:
    - key: redis.yaml
      subPath: secrets/redis.yaml
      data:
        redis:
          username: default
          password: test-redis-password

resources:
  requests:
    memory: 14Mi
    cpu: 240m
  limits:
    memory: 28Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 9
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  annotations: { }
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      name: http

ingress:
  enabled: true
  className: ""
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "localhost"
      path: "/"
      pathType: Prefix
      servicePort: 8080
      serviceName: urlshortener
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

redis:
  auth:
    password: test-redis-password
    usePasswordFiles: true
